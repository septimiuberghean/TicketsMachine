<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="0.5"/>
    <comp lib="0" loc="(1080,270)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1160,1020)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1250,270)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1320,1050)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1410,300)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1820,640)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1950,960)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(2120,960)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(2280,990)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(2560,520)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(2560,540)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(2560,560)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(2560,700)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2580,810)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(2890,500)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,520)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,540)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,560)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,580)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,600)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,620)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(2890,790)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(470,700)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(980,640)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(990,1020)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="5" loc="(1070,960)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1160,210)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1240,960)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1330,210)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1400,990)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1490,240)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2030,900)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2200,900)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2360,930)" name="7-Segment Display">
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2540,500)" name="Button"/>
    <comp lib="5" loc="(2540,790)" name="Button"/>
    <comp lib="5" loc="(2900,810)" name="LED"/>
    <comp lib="5" loc="(2910,640)" name="LED"/>
    <comp lib="5" loc="(440,680)" name="Button"/>
    <comp lib="5" loc="(740,700)" name="LED"/>
    <comp lib="5" loc="(940,620)" name="Button"/>
    <comp loc="(1030,350)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1030,410)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1050,270)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1230,600)" name="introduce_money">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1680,600)" name="calculate_rest">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1830,720)" name="number_splitter">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1900,1040)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1900,1100)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1920,960)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2190,580)" name="procesare_rest">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2840,500)" name="memory_money">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2850,790)" name="memory_tickets">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(720,220)" name="number_splitter">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(720,680)" name="calculate_cost">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(770,810)" name="number_splitter">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(940,1100)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(940,1160)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(960,1020)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(1010,1000)" to="(1020,1000)"/>
    <wire from="(1010,1010)" to="(1010,1080)"/>
    <wire from="(1010,1080)" to="(1130,1080)"/>
    <wire from="(1010,950)" to="(1070,950)"/>
    <wire from="(1010,960)" to="(1020,960)"/>
    <wire from="(1010,970)" to="(1040,970)"/>
    <wire from="(1010,980)" to="(1030,980)"/>
    <wire from="(1010,990)" to="(1050,990)"/>
    <wire from="(1020,1000)" to="(1020,1060)"/>
    <wire from="(1020,1060)" to="(1120,1060)"/>
    <wire from="(1020,920)" to="(1020,960)"/>
    <wire from="(1020,920)" to="(1080,920)"/>
    <wire from="(1030,1040)" to="(1080,1040)"/>
    <wire from="(1030,350)" to="(1240,350)"/>
    <wire from="(1030,410)" to="(1040,410)"/>
    <wire from="(1030,980)" to="(1030,1040)"/>
    <wire from="(1040,1020)" to="(1070,1020)"/>
    <wire from="(1040,410)" to="(1040,520)"/>
    <wire from="(1040,520)" to="(1410,520)"/>
    <wire from="(1040,970)" to="(1040,1020)"/>
    <wire from="(1050,1050)" to="(1090,1050)"/>
    <wire from="(1050,270)" to="(1080,270)"/>
    <wire from="(1050,990)" to="(1050,1050)"/>
    <wire from="(1070,950)" to="(1070,960)"/>
    <wire from="(1080,1020)" to="(1080,1040)"/>
    <wire from="(1080,920)" to="(1080,960)"/>
    <wire from="(1090,1020)" to="(1090,1050)"/>
    <wire from="(1090,920)" to="(1090,960)"/>
    <wire from="(1090,920)" to="(1130,920)"/>
    <wire from="(1100,200)" to="(1160,200)"/>
    <wire from="(1100,210)" to="(1110,210)"/>
    <wire from="(1100,220)" to="(1130,220)"/>
    <wire from="(1100,230)" to="(1120,230)"/>
    <wire from="(1100,240)" to="(1140,240)"/>
    <wire from="(1100,250)" to="(1110,250)"/>
    <wire from="(1100,260)" to="(1100,330)"/>
    <wire from="(1100,330)" to="(1220,330)"/>
    <wire from="(1100,930)" to="(1100,960)"/>
    <wire from="(1100,930)" to="(1120,930)"/>
    <wire from="(1110,170)" to="(1110,210)"/>
    <wire from="(1110,170)" to="(1170,170)"/>
    <wire from="(1110,250)" to="(1110,310)"/>
    <wire from="(1110,310)" to="(1210,310)"/>
    <wire from="(1120,230)" to="(1120,290)"/>
    <wire from="(1120,290)" to="(1170,290)"/>
    <wire from="(1120,930)" to="(1120,1060)"/>
    <wire from="(1130,220)" to="(1130,270)"/>
    <wire from="(1130,270)" to="(1160,270)"/>
    <wire from="(1130,920)" to="(1130,1080)"/>
    <wire from="(1140,240)" to="(1140,300)"/>
    <wire from="(1140,300)" to="(1180,300)"/>
    <wire from="(1150,1010)" to="(1150,1100)"/>
    <wire from="(1150,1010)" to="(1160,1010)"/>
    <wire from="(1160,1010)" to="(1160,1020)"/>
    <wire from="(1160,200)" to="(1160,210)"/>
    <wire from="(1170,170)" to="(1170,210)"/>
    <wire from="(1170,270)" to="(1170,290)"/>
    <wire from="(1180,1000)" to="(1190,1000)"/>
    <wire from="(1180,1010)" to="(1180,1080)"/>
    <wire from="(1180,1080)" to="(1300,1080)"/>
    <wire from="(1180,170)" to="(1180,210)"/>
    <wire from="(1180,170)" to="(1220,170)"/>
    <wire from="(1180,270)" to="(1180,300)"/>
    <wire from="(1180,950)" to="(1240,950)"/>
    <wire from="(1180,960)" to="(1190,960)"/>
    <wire from="(1180,970)" to="(1210,970)"/>
    <wire from="(1180,980)" to="(1200,980)"/>
    <wire from="(1180,990)" to="(1220,990)"/>
    <wire from="(1190,1000)" to="(1190,1060)"/>
    <wire from="(1190,1060)" to="(1290,1060)"/>
    <wire from="(1190,180)" to="(1190,210)"/>
    <wire from="(1190,180)" to="(1210,180)"/>
    <wire from="(1190,920)" to="(1190,960)"/>
    <wire from="(1190,920)" to="(1250,920)"/>
    <wire from="(1200,1040)" to="(1250,1040)"/>
    <wire from="(1200,980)" to="(1200,1040)"/>
    <wire from="(1210,1020)" to="(1240,1020)"/>
    <wire from="(1210,180)" to="(1210,310)"/>
    <wire from="(1210,970)" to="(1210,1020)"/>
    <wire from="(1220,1050)" to="(1260,1050)"/>
    <wire from="(1220,170)" to="(1220,330)"/>
    <wire from="(1220,990)" to="(1220,1050)"/>
    <wire from="(1230,600)" to="(1300,600)"/>
    <wire from="(1230,620)" to="(1460,620)"/>
    <wire from="(1230,640)" to="(1460,640)"/>
    <wire from="(1240,260)" to="(1240,350)"/>
    <wire from="(1240,260)" to="(1250,260)"/>
    <wire from="(1240,950)" to="(1240,960)"/>
    <wire from="(1250,1020)" to="(1250,1040)"/>
    <wire from="(1250,260)" to="(1250,270)"/>
    <wire from="(1250,920)" to="(1250,960)"/>
    <wire from="(1260,1020)" to="(1260,1050)"/>
    <wire from="(1260,920)" to="(1260,960)"/>
    <wire from="(1260,920)" to="(1300,920)"/>
    <wire from="(1270,200)" to="(1330,200)"/>
    <wire from="(1270,210)" to="(1280,210)"/>
    <wire from="(1270,220)" to="(1300,220)"/>
    <wire from="(1270,230)" to="(1290,230)"/>
    <wire from="(1270,240)" to="(1310,240)"/>
    <wire from="(1270,250)" to="(1280,250)"/>
    <wire from="(1270,260)" to="(1270,330)"/>
    <wire from="(1270,330)" to="(1390,330)"/>
    <wire from="(1270,930)" to="(1270,960)"/>
    <wire from="(1270,930)" to="(1290,930)"/>
    <wire from="(1280,170)" to="(1280,210)"/>
    <wire from="(1280,170)" to="(1340,170)"/>
    <wire from="(1280,250)" to="(1280,310)"/>
    <wire from="(1280,310)" to="(1380,310)"/>
    <wire from="(1290,230)" to="(1290,290)"/>
    <wire from="(1290,290)" to="(1340,290)"/>
    <wire from="(1290,930)" to="(1290,1060)"/>
    <wire from="(1300,220)" to="(1300,270)"/>
    <wire from="(1300,270)" to="(1330,270)"/>
    <wire from="(1300,600)" to="(1300,710)"/>
    <wire from="(1300,600)" to="(1460,600)"/>
    <wire from="(1300,920)" to="(1300,1080)"/>
    <wire from="(1310,240)" to="(1310,300)"/>
    <wire from="(1310,300)" to="(1350,300)"/>
    <wire from="(1320,1050)" to="(1320,1270)"/>
    <wire from="(1330,200)" to="(1330,210)"/>
    <wire from="(1340,1000)" to="(1370,1000)"/>
    <wire from="(1340,1010)" to="(1360,1010)"/>
    <wire from="(1340,1020)" to="(1380,1020)"/>
    <wire from="(1340,1030)" to="(1350,1030)"/>
    <wire from="(1340,1040)" to="(1340,1110)"/>
    <wire from="(1340,1110)" to="(1460,1110)"/>
    <wire from="(1340,170)" to="(1340,210)"/>
    <wire from="(1340,270)" to="(1340,290)"/>
    <wire from="(1340,980)" to="(1400,980)"/>
    <wire from="(1340,990)" to="(1350,990)"/>
    <wire from="(1350,1030)" to="(1350,1090)"/>
    <wire from="(1350,1090)" to="(1450,1090)"/>
    <wire from="(1350,170)" to="(1350,210)"/>
    <wire from="(1350,170)" to="(1390,170)"/>
    <wire from="(1350,270)" to="(1350,300)"/>
    <wire from="(1350,950)" to="(1350,990)"/>
    <wire from="(1350,950)" to="(1410,950)"/>
    <wire from="(1360,1010)" to="(1360,1070)"/>
    <wire from="(1360,1070)" to="(1410,1070)"/>
    <wire from="(1360,180)" to="(1360,210)"/>
    <wire from="(1360,180)" to="(1380,180)"/>
    <wire from="(1370,1000)" to="(1370,1050)"/>
    <wire from="(1370,1050)" to="(1400,1050)"/>
    <wire from="(1380,1020)" to="(1380,1080)"/>
    <wire from="(1380,1080)" to="(1420,1080)"/>
    <wire from="(1380,180)" to="(1380,310)"/>
    <wire from="(1390,170)" to="(1390,330)"/>
    <wire from="(1400,980)" to="(1400,990)"/>
    <wire from="(1410,1050)" to="(1410,1070)"/>
    <wire from="(1410,300)" to="(1410,520)"/>
    <wire from="(1410,950)" to="(1410,990)"/>
    <wire from="(1420,1050)" to="(1420,1080)"/>
    <wire from="(1420,920)" to="(1420,990)"/>
    <wire from="(1420,920)" to="(1500,920)"/>
    <wire from="(1430,230)" to="(1490,230)"/>
    <wire from="(1430,240)" to="(1440,240)"/>
    <wire from="(1430,250)" to="(1460,250)"/>
    <wire from="(1430,260)" to="(1450,260)"/>
    <wire from="(1430,270)" to="(1470,270)"/>
    <wire from="(1430,280)" to="(1440,280)"/>
    <wire from="(1430,290)" to="(1430,360)"/>
    <wire from="(1430,360)" to="(1550,360)"/>
    <wire from="(1430,930)" to="(1430,990)"/>
    <wire from="(1430,930)" to="(1490,930)"/>
    <wire from="(1440,200)" to="(1440,240)"/>
    <wire from="(1440,200)" to="(1500,200)"/>
    <wire from="(1440,280)" to="(1440,340)"/>
    <wire from="(1440,340)" to="(1540,340)"/>
    <wire from="(1450,260)" to="(1450,320)"/>
    <wire from="(1450,320)" to="(1500,320)"/>
    <wire from="(1450,940)" to="(1450,1090)"/>
    <wire from="(1450,940)" to="(1490,940)"/>
    <wire from="(1460,250)" to="(1460,300)"/>
    <wire from="(1460,300)" to="(1490,300)"/>
    <wire from="(1460,950)" to="(1460,1110)"/>
    <wire from="(1460,950)" to="(1500,950)"/>
    <wire from="(1470,270)" to="(1470,330)"/>
    <wire from="(1470,330)" to="(1510,330)"/>
    <wire from="(1490,230)" to="(1490,240)"/>
    <wire from="(1490,930)" to="(1490,940)"/>
    <wire from="(1500,200)" to="(1500,240)"/>
    <wire from="(1500,300)" to="(1500,320)"/>
    <wire from="(1500,920)" to="(1500,950)"/>
    <wire from="(1510,170)" to="(1510,240)"/>
    <wire from="(1510,170)" to="(1590,170)"/>
    <wire from="(1510,300)" to="(1510,330)"/>
    <wire from="(1520,180)" to="(1520,240)"/>
    <wire from="(1520,180)" to="(1580,180)"/>
    <wire from="(1540,190)" to="(1540,340)"/>
    <wire from="(1540,190)" to="(1580,190)"/>
    <wire from="(1550,200)" to="(1550,360)"/>
    <wire from="(1550,200)" to="(1590,200)"/>
    <wire from="(1580,180)" to="(1580,190)"/>
    <wire from="(1590,170)" to="(1590,200)"/>
    <wire from="(1610,690)" to="(1610,720)"/>
    <wire from="(1610,690)" to="(1780,690)"/>
    <wire from="(1640,1100)" to="(1680,1100)"/>
    <wire from="(1640,900)" to="(1640,1100)"/>
    <wire from="(1640,900)" to="(1890,900)"/>
    <wire from="(1670,1040)" to="(1680,1040)"/>
    <wire from="(1670,920)" to="(1670,1040)"/>
    <wire from="(1670,920)" to="(1860,920)"/>
    <wire from="(1680,600)" to="(1780,600)"/>
    <wire from="(1680,620)" to="(1960,620)"/>
    <wire from="(1680,640)" to="(1820,640)"/>
    <wire from="(1700,940)" to="(1700,960)"/>
    <wire from="(1700,940)" to="(1830,940)"/>
    <wire from="(1780,580)" to="(1780,600)"/>
    <wire from="(1780,580)" to="(1970,580)"/>
    <wire from="(1780,600)" to="(1780,690)"/>
    <wire from="(1830,720)" to="(1890,720)"/>
    <wire from="(1830,740)" to="(1860,740)"/>
    <wire from="(1830,760)" to="(1830,940)"/>
    <wire from="(1860,740)" to="(1860,920)"/>
    <wire from="(1890,720)" to="(1890,900)"/>
    <wire from="(1900,1040)" to="(2110,1040)"/>
    <wire from="(1900,1100)" to="(1910,1100)"/>
    <wire from="(1910,1100)" to="(1910,1210)"/>
    <wire from="(1910,1210)" to="(2280,1210)"/>
    <wire from="(1920,960)" to="(1950,960)"/>
    <wire from="(1960,600)" to="(1960,620)"/>
    <wire from="(1960,600)" to="(1970,600)"/>
    <wire from="(1970,1020)" to="(2090,1020)"/>
    <wire from="(1970,890)" to="(2030,890)"/>
    <wire from="(1970,900)" to="(1980,900)"/>
    <wire from="(1970,910)" to="(2000,910)"/>
    <wire from="(1970,920)" to="(1990,920)"/>
    <wire from="(1970,930)" to="(2010,930)"/>
    <wire from="(1970,940)" to="(1980,940)"/>
    <wire from="(1970,950)" to="(1970,1020)"/>
    <wire from="(1980,1000)" to="(2080,1000)"/>
    <wire from="(1980,860)" to="(1980,900)"/>
    <wire from="(1980,860)" to="(2040,860)"/>
    <wire from="(1980,940)" to="(1980,1000)"/>
    <wire from="(1990,920)" to="(1990,980)"/>
    <wire from="(1990,980)" to="(2040,980)"/>
    <wire from="(2000,910)" to="(2000,960)"/>
    <wire from="(2000,960)" to="(2030,960)"/>
    <wire from="(2010,930)" to="(2010,990)"/>
    <wire from="(2010,990)" to="(2050,990)"/>
    <wire from="(2030,890)" to="(2030,900)"/>
    <wire from="(2040,860)" to="(2040,900)"/>
    <wire from="(2040,960)" to="(2040,980)"/>
    <wire from="(2050,860)" to="(2050,900)"/>
    <wire from="(2050,860)" to="(2090,860)"/>
    <wire from="(2050,960)" to="(2050,990)"/>
    <wire from="(2060,870)" to="(2060,900)"/>
    <wire from="(2060,870)" to="(2080,870)"/>
    <wire from="(2080,870)" to="(2080,1000)"/>
    <wire from="(2090,860)" to="(2090,1020)"/>
    <wire from="(2110,950)" to="(2110,1040)"/>
    <wire from="(2110,950)" to="(2120,950)"/>
    <wire from="(2120,950)" to="(2120,960)"/>
    <wire from="(2140,1020)" to="(2260,1020)"/>
    <wire from="(2140,890)" to="(2200,890)"/>
    <wire from="(2140,900)" to="(2150,900)"/>
    <wire from="(2140,910)" to="(2170,910)"/>
    <wire from="(2140,920)" to="(2160,920)"/>
    <wire from="(2140,930)" to="(2180,930)"/>
    <wire from="(2140,940)" to="(2150,940)"/>
    <wire from="(2140,950)" to="(2140,1020)"/>
    <wire from="(2150,1000)" to="(2250,1000)"/>
    <wire from="(2150,860)" to="(2150,900)"/>
    <wire from="(2150,860)" to="(2210,860)"/>
    <wire from="(2150,940)" to="(2150,1000)"/>
    <wire from="(2160,920)" to="(2160,980)"/>
    <wire from="(2160,980)" to="(2210,980)"/>
    <wire from="(2170,910)" to="(2170,960)"/>
    <wire from="(2170,960)" to="(2200,960)"/>
    <wire from="(2180,930)" to="(2180,990)"/>
    <wire from="(2180,990)" to="(2220,990)"/>
    <wire from="(2190,580)" to="(2620,580)"/>
    <wire from="(2190,600)" to="(2620,600)"/>
    <wire from="(2190,620)" to="(2620,620)"/>
    <wire from="(2190,640)" to="(2620,640)"/>
    <wire from="(2190,660)" to="(2620,660)"/>
    <wire from="(2190,680)" to="(2620,680)"/>
    <wire from="(2190,700)" to="(2190,720)"/>
    <wire from="(2190,720)" to="(2420,720)"/>
    <wire from="(2200,890)" to="(2200,900)"/>
    <wire from="(2210,860)" to="(2210,900)"/>
    <wire from="(2210,960)" to="(2210,980)"/>
    <wire from="(2220,860)" to="(2220,900)"/>
    <wire from="(2220,860)" to="(2260,860)"/>
    <wire from="(2220,960)" to="(2220,990)"/>
    <wire from="(2230,870)" to="(2230,900)"/>
    <wire from="(2230,870)" to="(2250,870)"/>
    <wire from="(2250,870)" to="(2250,1000)"/>
    <wire from="(2260,860)" to="(2260,1020)"/>
    <wire from="(2280,990)" to="(2280,1210)"/>
    <wire from="(2300,1050)" to="(2420,1050)"/>
    <wire from="(2300,920)" to="(2360,920)"/>
    <wire from="(2300,930)" to="(2310,930)"/>
    <wire from="(2300,940)" to="(2330,940)"/>
    <wire from="(2300,950)" to="(2320,950)"/>
    <wire from="(2300,960)" to="(2340,960)"/>
    <wire from="(2300,970)" to="(2310,970)"/>
    <wire from="(2300,980)" to="(2300,1050)"/>
    <wire from="(2310,1030)" to="(2410,1030)"/>
    <wire from="(2310,890)" to="(2310,930)"/>
    <wire from="(2310,890)" to="(2370,890)"/>
    <wire from="(2310,970)" to="(2310,1030)"/>
    <wire from="(2320,1010)" to="(2370,1010)"/>
    <wire from="(2320,950)" to="(2320,1010)"/>
    <wire from="(2330,940)" to="(2330,990)"/>
    <wire from="(2330,990)" to="(2360,990)"/>
    <wire from="(2340,1020)" to="(2380,1020)"/>
    <wire from="(2340,960)" to="(2340,1020)"/>
    <wire from="(2360,920)" to="(2360,930)"/>
    <wire from="(2370,890)" to="(2370,930)"/>
    <wire from="(2370,990)" to="(2370,1010)"/>
    <wire from="(2380,860)" to="(2380,930)"/>
    <wire from="(2380,860)" to="(2460,860)"/>
    <wire from="(2380,990)" to="(2380,1020)"/>
    <wire from="(2390,870)" to="(2390,930)"/>
    <wire from="(2390,870)" to="(2450,870)"/>
    <wire from="(2410,880)" to="(2410,1030)"/>
    <wire from="(2410,880)" to="(2450,880)"/>
    <wire from="(2420,720)" to="(2420,830)"/>
    <wire from="(2420,720)" to="(2620,720)"/>
    <wire from="(2420,830)" to="(2630,830)"/>
    <wire from="(2420,890)" to="(2420,1050)"/>
    <wire from="(2420,890)" to="(2460,890)"/>
    <wire from="(2450,870)" to="(2450,880)"/>
    <wire from="(2460,860)" to="(2460,890)"/>
    <wire from="(2540,500)" to="(2620,500)"/>
    <wire from="(2540,790)" to="(2630,790)"/>
    <wire from="(2560,520)" to="(2620,520)"/>
    <wire from="(2560,540)" to="(2620,540)"/>
    <wire from="(2560,560)" to="(2620,560)"/>
    <wire from="(2560,700)" to="(2620,700)"/>
    <wire from="(2580,810)" to="(2630,810)"/>
    <wire from="(2840,500)" to="(2890,500)"/>
    <wire from="(2840,520)" to="(2890,520)"/>
    <wire from="(2840,540)" to="(2890,540)"/>
    <wire from="(2840,560)" to="(2890,560)"/>
    <wire from="(2840,580)" to="(2890,580)"/>
    <wire from="(2840,600)" to="(2890,600)"/>
    <wire from="(2840,620)" to="(2890,620)"/>
    <wire from="(2840,640)" to="(2910,640)"/>
    <wire from="(2850,790)" to="(2890,790)"/>
    <wire from="(2850,810)" to="(2900,810)"/>
    <wire from="(430,510)" to="(430,600)"/>
    <wire from="(430,510)" to="(490,510)"/>
    <wire from="(430,600)" to="(720,600)"/>
    <wire from="(440,680)" to="(500,680)"/>
    <wire from="(470,700)" to="(500,700)"/>
    <wire from="(490,220)" to="(490,510)"/>
    <wire from="(490,220)" to="(500,220)"/>
    <wire from="(540,790)" to="(540,810)"/>
    <wire from="(540,790)" to="(820,790)"/>
    <wire from="(540,810)" to="(550,810)"/>
    <wire from="(680,1160)" to="(720,1160)"/>
    <wire from="(680,960)" to="(680,1160)"/>
    <wire from="(680,960)" to="(870,960)"/>
    <wire from="(710,1100)" to="(720,1100)"/>
    <wire from="(710,980)" to="(710,1100)"/>
    <wire from="(710,980)" to="(790,980)"/>
    <wire from="(720,220)" to="(770,220)"/>
    <wire from="(720,240)" to="(800,240)"/>
    <wire from="(720,260)" to="(830,260)"/>
    <wire from="(720,600)" to="(1010,600)"/>
    <wire from="(720,600)" to="(720,680)"/>
    <wire from="(720,700)" to="(740,700)"/>
    <wire from="(740,1000)" to="(740,1020)"/>
    <wire from="(740,1000)" to="(770,1000)"/>
    <wire from="(770,220)" to="(770,410)"/>
    <wire from="(770,410)" to="(810,410)"/>
    <wire from="(770,810)" to="(870,810)"/>
    <wire from="(770,830)" to="(790,830)"/>
    <wire from="(770,850)" to="(770,1000)"/>
    <wire from="(790,830)" to="(790,980)"/>
    <wire from="(800,240)" to="(800,350)"/>
    <wire from="(800,350)" to="(810,350)"/>
    <wire from="(820,710)" to="(1300,710)"/>
    <wire from="(820,710)" to="(820,790)"/>
    <wire from="(830,260)" to="(830,270)"/>
    <wire from="(870,810)" to="(870,960)"/>
    <wire from="(940,1100)" to="(1150,1100)"/>
    <wire from="(940,1160)" to="(950,1160)"/>
    <wire from="(940,620)" to="(1010,620)"/>
    <wire from="(950,1160)" to="(950,1270)"/>
    <wire from="(950,1270)" to="(1320,1270)"/>
    <wire from="(960,1020)" to="(990,1020)"/>
    <wire from="(980,640)" to="(1010,640)"/>
  </circuit>
  <vhdl name="memory_money">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
--use ieee.std_logic_unsigned;
--use ieee.std_logic_arith.all;

entity memory_money is
    port (
        button    : in  std_logic;
        mode      : in  std_logic;-- mode e 0-&gt; admin
        					    -- mode e 1-&gt; user
        we        : in  std_logic;
        addr      : in  std_logic_vector(2 downto 0);
        unu       : in  std_logic_vector(6 downto 0);
        doi       : in  std_logic_vector(6 downto 0);
        cinci     : in  std_logic_vector(6 downto 0);
        zece      : in  std_logic_vector(6 downto 0);
        dzeci     : in  std_logic_vector(6 downto 0);
        czeci     : in  std_logic_vector(6 downto 0);
        din       : in  std_logic_vector(7 downto 0);
        ok        : in  std_logic;
        unu_out   : out std_logic_vector(7 downto 0);
        doi_out   : out std_logic_vector(7 downto 0);
        cinci_out : out std_logic_vector(7 downto 0);
        zece_out  : out std_logic_vector(7 downto 0);
        dzeci_out : out std_logic_vector(7 downto 0);
        czeci_out : out std_logic_vector(7 downto 0);
        dout      : out std_logic_vector(7 downto 0);
        error     : out std_logic
    );
end entity memory_money;

architecture rtl of memory_money is
    type memory_array is array (0 to 5) of std_logic_vector(7 downto 0);
    signal memory : memory_array := (others =&gt; "00000000");
begin

    process(button,ok)
    variable flag : std_logic;
    begin
        if rising_edge(button) then
                if mode = '0'  then
                    if we = '1' then
                        memory(to_integer(unsigned(addr))) &lt;= din;
                    else
                        dout &lt;= memory(to_integer(unsigned(addr)));
                     end if;
                elsif mode= '1' then
                if unsigned(memory(0)) &gt;= unsigned(unu) then
                    memory(0) &lt;= std_logic_vector(unsigned(memory(0)) - unsigned(unu));
                else
                    flag := '1';
                end if;
                if unsigned(memory(1)) &gt;= unsigned(doi) and flag /='1' then
                    memory(1) &lt;= std_logic_vector(unsigned(memory(1)) - unsigned(doi));
                 else
                    flag := '1';
                end if;
                if unsigned(memory(2)) &gt;= unsigned(cinci) and flag /='1' then
                    memory(2) &lt;= std_logic_vector(unsigned(memory(2)) - unsigned(cinci));
                else
                    flag := '1';
                end if;
                if unsigned(memory(3)) &gt;= unsigned(zece) and flag /='1'  then
                    memory(3) &lt;= std_logic_vector(unsigned(memory(3)) - unsigned(zece));        
                else
                    flag := '1';
                end if;
                if unsigned(memory(4)) &gt;= unsigned(dzeci) and flag /='1' then
                    memory(4) &lt;= std_logic_vector(unsigned(memory(4)) - unsigned(dzeci));
                else
                    flag := '1';
                end if; 
                if unsigned(memory(5)) &gt;= unsigned(czeci) and flag /='1' then
                    memory(5) &lt;= std_logic_vector(unsigned(memory(5)) - unsigned(czeci));
                else
                    flag := '1';
                end if;
            end if;
            if flag ='1' then
            	error &lt;= '1';
            else
            	error &lt;= '0';
            end if;
            unu_out &lt;= memory(0);
            doi_out &lt;= memory(1);
            cinci_out &lt;= memory(2);
            zece_out &lt;= memory(3);
            dzeci_out &lt;= memory(4);
            czeci_out &lt;= memory(5);
        end if;
    end process;

end rtl;
</vhdl>
  <vhdl name="calculate_cost">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity calculate_cost is
    port (
        button   : in  std_logic;
        data_in  : in  std_logic_vector(5 downto 0);
        data_out : out std_logic_vector(6 downto 0);
        error    : out std_logic
    );
end entity calculate_cost;

architecture rtl of calculate_cost is
    signal shift_reg : std_logic_vector(6 downto 0);
begin
    process(button)
    begin
        if rising_edge(button) then
            if (to_integer(unsigned(data_in)) &lt;= 50) then
                shift_reg &lt;= data_in &amp; '0';  -- Shift left and insert new data at the end
                error &lt;= '0';  -- Reset the error signal
            else
                shift_reg &lt;= (others =&gt; '0');  -- Set shift_reg to 0 when data_in &gt; 50
                error &lt;= '1';  -- Set the error signal to 1
            end if;
        end if;
    end process;

    data_out &lt;= shift_reg;
end architecture rtl;</vhdl>
  <vhdl name="segment_7">LIBRARY ieee;
USE ieee.std_logic_1164.all;
					  
ENTITY segment_7 IS
							
  PORT (
     val           : IN  std_logic_vector(3 DOWNTO 0);
  	a_b_c_d_e_f_g : OUT std_logic_vector(6 downTO 0)
    );
END segment_7;
--   a
--f     b
--   g
--e     c
--   d
--
--
ARCHITECTURE TypeArchitecture OF segment_7 IS

BEGIN
		a_b_c_d_e_f_g &lt;= "0000001" when val = x"0" else
				       "1001111" when val = x"1" else
				       "0010010" when val = x"2" else
				       "0000110" when val = x"3" else
				       "1001100" when val = x"4" else
				       "0100100" when val = x"5" else
				       "0100000" when val = x"6" else
				       "0001111" when val = x"7" else
				       "0000000" when val = x"8" else
				       "0000100" when val = x"9" else
				       "0001000" when val = x"A" else
				       "1100000" when val = x"b" else
				       "1110010" when val = x"c" else
				       "1000010" when val = x"d" else
				       "0110000" when val = x"E" else
				       "0111000" when val = x"F" ;	-- toate segmentele stinse
				       		

END TypeArchitecture;</vhdl>
  <vhdl name="number_splitter">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity number_splitter is
  port (
    num_in : in std_logic_vector(6 downto 0);
    units_out : out std_logic_vector(3 downto 0);
    tens_out : out std_logic_vector(3 downto 0);
    hundreds_out : out std_logic_vector(3 downto 0)
  );
end entity number_splitter;

architecture behavior of number_splitter is
  signal num : integer;
begin
  num &lt;= to_integer(unsigned(num_in));
  units_out &lt;= std_logic_vector(to_unsigned(num mod 10, 4));
  tens_out &lt;= std_logic_vector(to_unsigned(num / 10 mod 10, 4));
  hundreds_out &lt;= std_logic_vector(to_unsigned(num / 100 mod 10, 4));
end architecture behavior;
</vhdl>
  <vhdl name="introduce_money">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity introduce_money is
    port (
        cost        : in  std_logic_vector(6 downto 0);
        button      : in  std_logic;
        addr        : in  std_logic_vector(2 downto 0);
        suma_data   : out std_logic_vector(6 downto 0);
        suma_ceruta : out std_logic_vector(6 downto 0);
        ok          : out std_logic --cand am ajuns la suma ceruta, trecem la acordarea restului
    );
end entity introduce_money;

architecture rtl of introduce_money is
    signal suma_ceruta_int : integer := 0;
    signal introdus_semnal : integer := 0;
    
begin
    suma_ceruta_int &lt;= to_integer(unsigned(cost));
    suma_ceruta &lt;= cost;
    process(button)
        variable introdus : integer := introdus_semnal;
    begin
        if rising_edge(button) then
            case addr is
                when "000" =&gt;
                    introdus := introdus + 1;
                when "001" =&gt;
                    introdus := introdus + 2;
                when "010" =&gt;
                    introdus := introdus + 5;
                when "011" =&gt;
                    introdus := introdus + 10;
                when "100" =&gt;
                    introdus := introdus + 20;
                when "101" =&gt;
                    introdus := introdus + 50;
                when others =&gt;
                    null;
            end case;
            
            if introdus &gt;= suma_ceruta_int then
                suma_data &lt;= std_logic_vector(to_unsigned(introdus, 7));
                ok &lt;= '1';
            else
            	 ok &lt;= '0';
            end if;
            
            introdus_semnal &lt;= introdus;
        end if;
        
        suma_data &lt;= std_logic_vector(to_unsigned(introdus, 7));
    end process;

end architecture rtl;
</vhdl>
  <vhdl name="calculate_rest">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;
ENTITY calculate_rest IS
  PORT (
    suma_data   : in std_logic_vector(6 downto 0);
    suma_ceruta : in std_logic_vector(6 downto 0);
    ok          : in std_logic;
    rest        : out std_logic_vector(6 downto 0);
    ok2         : out std_logic;
    error       : out std_logic
    );
END calculate_rest;

ARCHITECTURE TypeArchitecture OF calculate_rest IS
  signal rest_int        : integer;
  signal suma_data_int   : integer;
  signal suma_ceruta_int : integer;
BEGIN
  ok2 &lt;= ok;
  process(ok)
  begin
  if ok ='1' then
    error           &lt;= '0';
    rest &lt;= suma_data-suma_ceruta;
   else
	error &lt;= '1';
   end if;
  end process;
  
END TypeArchitecture;</vhdl>
  <vhdl name="procesare_rest">LIBRARY ieee;
USE ieee.std_logic_1164.all;

use ieee.numeric_std.all;

ENTITY procesare_rest IS
  PORT (
  	rest   : in std_logic_vector(6 downto 0);
  	ok     : in std_logic;
  	unu    : out std_logic_vector(6 downto 0);
  	doi    : out std_logic_vector(6 downto 0);
  	cinci  : out std_logic_vector(6 downto 0);
  	zece   : out std_logic_vector(6 downto 0);
  	dzeci  : out std_logic_vector(6 downto 0);
  	czeci  : out std_logic_vector(6 downto 0);
  	ok2    : out std_logic
    );
END procesare_rest;
            
ARCHITECTURE TypeArchitecture OF procesare_rest IS
	signal left : natural :=0 ;
BEGIN
	ok2 &lt;= ok;
     left &lt;= to_integer(unsigned(rest));

	process(ok,left)
     variable ramas : natural;
     variable unu_int : natural := 0;
     variable doi_int : natural := 0;
     variable cinci_int : natural := 0;
     variable zece_int : natural := 0;
     variable dzeci_int : natural := 0;
     variable czeci_int : natural := 0;
	begin
		if ok = '1' then
		ramas := left;
		czeci_int:=ramas/50;
		czeci&lt;=std_logic_vector(to_unsigned(czeci_int,7));
		ramas:=ramas-czeci_int*50;
		dzeci_int:=ramas/20;
		dzeci&lt;=std_logic_vector(to_unsigned(dzeci_int,7));
		ramas:=ramas-dzeci_int*20;
		zece_int:=ramas/10;
		zece&lt;=std_logic_vector(to_unsigned(zece_int,7));
		ramas:=ramas-zece_int*10;
		cinci_int:=ramas/5;
		cinci&lt;=std_logic_vector(to_unsigned(cinci_int,7));
		ramas:=ramas-cinci_int*5;
		doi_int:=ramas/2;
		doi&lt;=std_logic_vector(to_unsigned(doi_int,7));
		ramas:=ramas-doi_int*2;
		unu_int:=ramas;
		unu&lt;=std_logic_vector(to_unsigned(unu_int,7));
		end if;
	end process;
	
END TypeArchitecture;</vhdl>
  <vhdl name="memory_tickets">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity memory_tickets is
    port (
    button           : in std_logic;
    numar_bilete 	  : in std_logic_vector(6 downto 0);
    ok 			  : in std_logic;
    numar_bilete_out : out std_logic_vector(6 downto 0);
    error            : out std_logic
    );
end entity memory_tickets;

architecture Behavioral of memory_tickets is
    signal nr_bilete : unsigned(6 downto 0);
begin
    process (button,ok)
    begin
    if rising_edge(button) then
        if ok = '1' then
        	if unsigned(numar_bilete) &gt; 0 then
            nr_bilete &lt;= unsigned(numar_bilete) - 1;
            error &lt;= '0';
          else
           error &lt;= '1';
          end if;
        else
        	  nr_bilete &lt;= unsigned(numar_bilete);
        end if;
     end if;
    end process;

    numar_bilete_out &lt;= std_logic_vector(nr_bilete);
end architecture Behavioral;
</vhdl>
  <vhdl name="hex_7seg">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hex_7seg IS

  PORT (
 		hex_in: in std_logic_vector(3 downto 0);
  		a_b_c_d_e_f_g: out std_logic_vector(6 downto 0)
  		);

END hex_7seg;

ARCHITECTURE arch_hex OF hex_7seg IS

BEGIN

	a_b_c_d_e_f_g &lt;= "1111110" when hex_in= x"0" else
				  "0110000" when hex_in= x"1" else
				  "1101101" when hex_in= x"2" else
				  "1111001" when hex_in= x"3" else
				  "0110011" when hex_in= x"4" else
				  "1011011" when hex_in= x"5" else
				  "1011111" when hex_in= x"6" else
				  "1110000" when hex_in= x"7" else
				  "1111111" when hex_in= x"8" else
				  "1111011" when hex_in= x"9" else
				  "1110111" when hex_in= x"A" else
				  "0011111" when hex_in= x"B" else
				  "1001110" when hex_in= x"C" else
				  "0111101" when hex_in= x"d" else
				  "1001111" when hex_in= x"E" else
				  "0000001" when hex_in= x"F" else
				  "0000000";

END arch_hex;</vhdl>
</project>
